export const autoCompleteList = new /* FOR AUTOGEN */ Array(
	{ label: "abs", type: "text", apply: "abs{}" },
	{ label: "alpha", type: "text", apply: "alpha" },
	{ label: "bar", type: "text", apply: "bar{}" },
	{ label: "because", type: "text", apply: ":'" },
	{ label: "beta", type: "text", apply: "beta" },
	{ label: "cancel", type: "text", apply: "cancel{}" },
	{ label: "ceil", type: "text", apply: "ceil{}" },
	{ label: "chi", type: "text", apply: "chi" },
	{ label: "complexnumberset", type: "text", apply: "CC" },
	{ label: "delta", type: "text", apply: "delta" },
	{ label: "Delta", type: "text", apply: "Delta" },
	{ label: "dot", type: "text", apply: "dot{}" },
	{ label: "doubledot", type: "text", apply: "ddot{}" },
	{ label: "emptyset", type: "text", apply: "O/" },
	{ label: "epsilon", type: "text", apply: "epsilon" },
	{ label: "equals", type: "text", apply: "=" },
	{ label: "eta", type: "text", apply: "eta" },
	{ label: "floor", type: "text", apply: "floor{}" },
	{ label: "fraction", type: "text", apply: "frac{}{}" },
	{ label: "gamma", type: "text", apply: "gamma" },
	{ label: "Gamma", type: "text", apply: "Gamma" },
	{ label: "greaterthan", type: "text", apply: ">" },
	{ label: "greaterorequals", type: "text", apply: ">=" },
	{ label: "hat", type: "text", apply: "hat{}" },
	{ label: "infinity", type: "text", apply: "oo" },
	{ label: "intboth", type: "text", apply: "int_{}^{}" },
	{ label: "integernumberset", type: "text", apply: "ZZ" },
	{ label: "intover", type: "text", apply: "int^{}" },
	{ label: "intunder", type: "text", apply: "int_{}" },
	{ label: "iota", type: "text", apply: "iota" },
	{ label: "kappa", type: "text", apply: "kappa" },
	{ label: "lambda", type: "text", apply: "lambda" },
	{ label: "Lambda", type: "text", apply: "Lambda" },
	{ label: "lessthan", type: "text", apply: "<" },
	{ label: "lessorequals", type: "text", apply: "<=" },
	{ label: "limunder", type: "text", apply: "lim_{}" },
	{ label: "mu", type: "text", apply: "mu" },
	{ label: "naturalnumberset", type: "text", apply: "NN" },
	{ label: "notequal", type: "text", apply: "!=" },
	{ label: "nu", type: "text", apply: "nu" },
	{ label: "omega", type: "text", apply: "omega" },
	{ label: "Omega", type: "text", apply: "Omega" },
	{ label: "overbrace", type: "text", apply: "obrace{}{}" },
	{ label: "overset", type: "text", apply: "overset{}{}" },
	{ label: "partial", type: "text", apply: "del" },
	{ label: "phi", type: "text", apply: "phi" },
	{ label: "Phi", type: "text", apply: "Phi" },
	{ label: "pi", type: "text", apply: "pi" },
	{ label: "Pi", type: "text", apply: "Pi" },
	{ label: "power", type: "text", apply: "^{}" },
	{ label: "prodboth", type: "text", apply: "prod_{}^{}" },
	{ label: "prodover", type: "text", apply: "prod^{}" },
	{ label: "produnder", type: "text", apply: "prod_{}" },
	{ label: "psi", type: "text", apply: "psi" },
	{ label: "Psi", type: "text", apply: "Psi" },
	{ label: "rationalnumberset", type: "text", apply: "QQ" },
	{ label: "realnumberset", type: "text", apply: "RR" },
	{ label: "rho", type: "text", apply: "rho" },
	{ label: "sigma", type: "text", apply: "sigma" },
	{ label: "Sigma", type: "text", apply: "Sigma" },
	{ label: "strikethrough", type: "text", apply: "cancel{}" },
	{ label: "sumboth", type: "text", apply: "sum_{}^{}" },
	{ label: "sumover", type: "text", apply: "sum^{}" },
	{ label: "sumunder", type: "text", apply: "sum_{}" },
	{ label: "tau", type: "text", apply: "tau" },
	{ label: "text", type: "text", apply: "text()" },
	{ label: "therefore", type: "text", apply: ":." },
	{ label: "theta", type: "text", apply: "theta" },
	{ label: "Theta", type: "text", apply: "Theta" },
	{ label: "tilde", type: "text", apply: "tilde{}" },
	{ label: "times", type: "text", apply: "Ã—" },
	{ label: "towards", type: "text", apply: "->" },
	{ label: "underbrace", type: "text", apply: "ubrace{}{}" },
	{ label: "underline", type: "text", apply: "ul{}" },
	{ label: "underset", type: "text", apply: "underset{}{}" },
	{ label: "upsilon", type: "text", apply: "upsilon" },
	{ label: "vec", type: "text", apply: "vec{}" },
	{ label: "xi", type: "text", apply: "xi" },
	{ label: "Xi", type: "text", apply: "Xi" },
	{ label: "zeta", type: "text", apply: "zeta" },
);
/* END AUTOGEN */
